package org.openhab.binding.lgwebos.internal.discovery;

import java.util.Collections;
import java.util.Set;

import org.eclipse.smarthome.config.discovery.DiscoveryResult;
import org.eclipse.smarthome.config.discovery.UpnpDiscoveryParticipant;
import org.eclipse.smarthome.core.thing.ThingTypeUID;
import org.eclipse.smarthome.core.thing.ThingUID;
import org.jupnp.UpnpService;
import org.jupnp.model.meta.RemoteDevice;
import org.jupnp.model.meta.RemoteService;
import org.openhab.binding.lgwebos.LGWebOSBindingConstants;
import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Component(immediate = true)
public class LGWebOSUpnpDiscoveryParticipant implements UpnpDiscoveryParticipant {
    private final Logger logger = LoggerFactory.getLogger(LGWebOSUpnpDiscoveryParticipant.class);
    private final String URN = "urn:lge-com:service:webos-second-screen:1";
    private UpnpService upnpService;

    @Reference
    protected void setUpnpService(UpnpService upnpService) {
        this.upnpService = upnpService;
    }

    protected void unsetUpnpService(UpnpService upnpService) {
        this.upnpService = null;
    }

    @Override
    public Set<ThingTypeUID> getSupportedThingTypeUIDs() {
        return Collections.singleton(LGWebOSBindingConstants.THING_TYPE_WEBOSTV);
    }

    @Override
    public DiscoveryResult createResult(RemoteDevice device) {

        String manufacturer = device.getDetails().getManufacturerDetails().getManufacturer();
        if ("LG Electronics".equals(manufacturer)) {
            String modelName = device.getDetails().getModelDetails().getModelName();
            String friedlyName = device.getDetails().getFriendlyName();
            for (RemoteService s : device.getServices()) {
                logger.info("{}", s);
            }
        }

        return null;
    }

    @Override
    public ThingUID getThingUID(RemoteDevice device) {
        if (device != null) {

            String manufacturer = device.getDetails().getManufacturerDetails().getManufacturer();
            String modelName = device.getDetails().getModelDetails().getModelName();
            String friedlyName = device.getDetails().getFriendlyName();

            if (manufacturer != null && modelName != null) {

                // UDN shouldn't contain '-' characters.
                String udn = device.getIdentity().getUdn().getIdentifierString().replace("-", "_");

                // One Samsung TV contains several UPnP devices.

                // if (device.getType().getType().equals("MediaRenderer")) {

                logger.debug("Discovered a LG TV '{}' model '{}' thing with UDN '{}'", friedlyName, modelName, udn);

                // return new ThingUID(LGWebOSBindingConstants.THING_TYPE_WEBOSTV, udn);

                // }
            }
        }
        return null;
    }

}
